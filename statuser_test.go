package statuser

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestGenerateBlock(t *testing.T) {
	Emojis = true
	emojiBlock := generateBlock("ðŸš¨ ERROR ðŸš¨", "â–‘")
	if emojiBlock != "â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘\nâ–‘ðŸš¨ ERROR ðŸš¨â–‘\nâ–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘" {
		t.Errorf(emojiBlock, "!= â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘\nâ–‘ðŸš¨ ERROR ðŸš¨â–‘\nâ–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘")
	}

	Emojis = false
	block := generateBlock("ERROR", "â–‘")
	if block != "â–‘â–‘â–‘â–‘â–‘â–‘â–‘\nâ–‘ERRORâ–‘\nâ–‘â–‘â–‘â–‘â–‘â–‘â–‘" {
		t.Errorf(block, "!= â–‘â–‘â–‘â–‘â–‘â–‘â–‘\nâ–‘ERRORâ–‘\nâ–‘â–‘â–‘â–‘â–‘â–‘â–‘")
	}
}

// Test function for the separateBySpaces function
func TestSeparateBySpaces(t *testing.T) {
	tt := []struct {
		items    []interface{}
		expected string
	}{
		{
			items:    []interface{}{},
			expected: "",
		},
		{
			items:    []interface{}{"Hello"},
			expected: "Hello",
		},
		{
			items:    []interface{}{0, "Hello", true},
			expected: "0 Hello true",
		},
	}

	for _, test := range tt {
		assert.Equal(t, test.expected, separateBySpaces(test.items))
	}
}

func TestWarning(t *testing.T) {
	Emojis = true
	Warning("Test")
	Emojis = false
	Warning("Test")
}

func TestSuccess(t *testing.T) {
	Emojis = true
	Success("Test")
	Emojis = false
	Success("Test")
}
